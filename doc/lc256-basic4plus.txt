The LC256 has the standard BASIC4+ from the CBM2-series 500/600/700 with some modifications:

- No ESC-sequences
- No USING
- No CATALOG - use DIRECTORY
- No real time clock (no CIA) - TI$ counts in system interrupt every 1/64 second
- BASIC4+ has no TI
- TI$ with 1/8 seconds as last digit
- Workaround for THEN + ELSE with graphics statements: Write ':' after each THEN and ELSE !!!
- USB replaces RS232-device 3 - USB receive only with GET# - INPUT# does not work!


Modded statements for LC256:
---------------------------
BANK changes only the RAM bank for the first 32KB
BLOAD switches only first 32KB bank
BSAVE switches only first 32KB bank
SYS switches only first 32KB bank

Added statements for LC256:
---------------------------
UNIT selects the default drive for disk commands

Added graphics statements+function:
-----------------------------------
V9958/9938 mode6/7 with sprite mode 2 only!
upper left of screen is 0, 0
16 colors from palette / 8bit color %RRRGGGBB
Sprite Data Blocks are 40 bytes:
32 byte pattern + 8 byte= 16 color nibbles for the 16 sprite lines.

MODE g,c		g=0/1 on/off +2=PAL +4=Mode7, +8 YJK (only mode 7), frame color
COLOR c			select draw/text color
CLEAR c			clear screen with backgroundcolor
DOT x,y			set pixel x,y
LINE x,y,x1,y1		line from x,y to x1,y1
SET x,y			set cursor to x,y
DRAW x1,y1		draw line to x1,y1
FRAME x,y,x1,y1		frame x,y=lower left, x1,y1=upper right
BLOCK x,y,dx,dy		block x,y=lower left, size dx,dy (min. 1)
IMAGE x,y,adr		copy image (byte 0+1=dx,dy) from adr to x,y (only mode 6)
TEST(x)			function test returns pixel color (set y with SET)
CIRCLE x,y,r		circle at x,y with radius r (x doubled in mode 6)
SPRITE n,p,f		sprite n=0-31, pattern p=0-63, flags f= bit#5-7 
SDATA p,cnt,adr		copy cnt=1-64 x 40 bytes to p=0-63 from adr
SPOS n,x,y		move sprite n=0-31 to x, y pos. (0=upper left) 
USERFONT adr		set userfont to adr=address
SCOLOR n,r,g,b  mode6	set palette color n to red, green, blue (each 0-7)
SCOLOR n, c	mode7	set uni color sprite n=0-31 with color c+flags 
SCOPY x,y,dx,dy,x1,y1	copy screen data from x,y size dx,dy to x1,y1 

These statements have no function and are only present for c64-v9958-card LIST compatibility:
INIT			not needed - initialized at bootup
VPRINT x,y,""		removed
UPRINT ""		-> standard PRINT
UPOS r,c		removed

MONITOR:
--------
start with SYS 61184 ($EF00)
or BRK command in assembler

<:>      alter memory
<;>      alter registers
<.>      alter assembly
<r>      display registers
<m>      display memory
<a>      assemble
<d>      disassemble
<g>      start execution of code
<j>      start subroutine (jsr)
<t>      transfer memory
<c>      compare memory
<f>      fill memory
<h>      hunt memory
<l>      load
<s>      save
<v>      verify
<b>      select RAM 0 bank (0-15)
<@>      disk command (@$ directory)
<x>      warm start basic
<u>      set default disk unit

